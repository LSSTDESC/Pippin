# This configuration is used to compute the independent multiplicative error fudges
# How to use:
# 1. Run this file in Pippin
# 2. Run    sntable_dump.pl FITOPT000.ROOT FITRES obs    in both of the LCFIT output folders
# 3. Copy the original FITRES and the dump files into a new directory and rename them such that
#    fakes obs dump file -> fakes_obs.fitres
#    sim obs dump file -> sim_obs.fitres
# 3. Use these files to run compute_map.py   in the external code directory
# 4. Copy the maps it produces into the $DES_ROOT/simlibs/maps directory
# 5. Using the 1D 2D and 3D maps, run a sanity check using srh_fakes_sanitycheck.yml
# 6. Using one of the maps (ie the 2D 5sigma map) as a fiducial map, run srh_fakes_getcov.yml to determine the covariance
# 7. Put those values into the srh_fakes_checkmaps.yml file to verify that it looks good on fakes and data


DATAPREP:
  FAKESDIFFIMG:
    OPTS:
      RAW_DIR: $DES_ROOT/lcmerge/DESALL_forcePhoto_fake_snana_fits

SIM:
  FAKESIMLIBDIFFIMG:
    IA:
      BASE: surveys/des/sims_ia/fakes_diffimg.input
    GLOBAL:
      RANSEED_REPEAT: 10 12345
      BATCH_INFO: sbatch $SBATCH_TEMPLATES/SBATCH_Midway2_10hr-lc.TEMPLATE 10

LCFIT:
  FAKES:
    BASE: surveys/des/lcfit_nml/fakes.nml
    OPTS:
      BATCH_INFO: sbatch $SBATCH_TEMPLATES/SBATCH_Midway2_10hr.TEMPLATE 40
