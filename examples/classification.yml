# Note that these examples are for the specific task only, and you cannot run this file (as there are no dependent tasks).
# Use these files to see how you can configure your tasks, and the configs directory contains full analyses showing
# all the tasks and how they relate to each other

CLASSIFICATION:
  PERFECT:
    CLASSIFIER: PerfectClassifier
    MODE: predict
    OPTS:
      PROB_IA: 1.0
      PROB_CC: 0.0

  SNNVANILLATRAIN:
    CLASSIFIER: SuperNNovaClassifier
    MODE: train  # Mode is either train or predict.
    MASK_SIM: TRAINING  # You can use MASK_SIM to mask on sim name, MASK_FIT to mask on lcfit name, and MASK to mask on both

  SNNVANILLATEST:
    CLASSIFIER: SuperNNovaClassifier
    MODE: predict
    MASK: TEST
    OPTS:
      MODEL: SNNVANILLATRAIN  # This model should match a name of a *previously declared* classifier. Order is important in this one.

  SNNVARIATIONALTRAIN:
    CLASSIFIER: SuperNNovaClassifier
    MODE: train
    MASK_SIM: TRAINING
    OPTS:
      VARIANT: variational # Variants are vanilla, variational and bayesian

  SNNVARIATIONALTEST:
    CLASSIFIER: SuperNNovaClassifier
    MODE: predict
    MASK: TEST
    OPTS:
      MODEL: SNNVARIATIONALTRAIN
      VARIANT: variational

  SNNBAYESIANTRAIN:
    CLASSIFIER: SuperNNovaClassifier
    MODE: train
    MASK_SIM: TRAINING
    OPTS:
      VARIANT: bayesian

  SNNBAYESIANTEST:
    CLASSIFIER: SuperNNovaClassifier
    MODE: predict
    MASK: TEST
    OPTS:
      MODEL: SNNBAYESIANTRAIN
      VARIANT: bayesian

  FITPROBTEST:  # This classifier just uses the fitprob column. Useful as a baseline... everything should be better than this.
    CLASSIFIER: FitProbClassifier
    MODE: predict
    MASK: TEST

  NNTRAIN:  # Rick's Nearest Neighbour Classifier. Currently not really configurable.
    CLASSIFIER: NearestNeighborClassifier
    MODE: train
    MASK_SIM: TRAINING

  NNTEST:
    CLASSIFIER: NearestNeighborClassifier
    MODE: predict
    MASK_SIM: TEST
    OPTS:
        MODEL: NNTRAIN

  NNFITOPTTRAIN:  # Rick's Nearest Neighbour Classifier. Currently not really configurable.
    CLASSIFIER: NearestNeighborClassifier
    MODE: train
    MASK_SIM: TRAINING
    OPTS:
      FITOPT: SALT20_cal  # Can also use a FITRES file which isnt FITOPT000.FITRES. Just make sure the FITOPT option matches (exactly) a fitopt label.

  NNFITOPTTEST:
    CLASSIFIER: NearestNeighborClassifier
    MODE: predict
    MASK_SIM: TEST
    OPTS:
      MODEL: NNTRAIN
      FITOPT: SALT20_cal

  SNIRFTRAIN:  # The classifier from Eve, Steve and the Argonne team. Random forest
    CLASSIFIER: SnirfClassifier
    MODE: train
    MASK_SIM: TRAINING

  SNIRFTEST:
    CLASSIFIER: SnirfClassifier
    MODE: predict
    MASK_SIM: TEST
    OPTS:
      MODEL: SNIRFTRAIN

  SNIRFFEATURETRAIN:
    CLASSIFIER: SnirfClassifier
    MODE: train
    MASK_SIM: TRAIN
    OPTS:
      FEATURES: x1 c zHD FITPROB  # You can specify columns from the FITRES file to use as features. By default uses x1 c zHD x1ERR cERR PKMJDERR"

  SNIRFFEATURETEST:
    CLASSIFIER: SnirfClassifier
    MODE: predict
    MASK_SIM: TEST
    OPTS:
      MODEL: SNIRFFEATURETRAIN
      FEATURES: x1 c zHD FITPROB

  SNIRFFITOPTTRAIN:
    CLASSIFIER: SnirfClassifier
    MODE: train
    MASK_SIM: TRAIN
    OPTS:
      FITOPT: SALT20_cal  # Can also use a FITRES file which isnt FITOPT000.FITRES. Just make sure the FITOPT option matches (exactly) a fitopt label.

  SNIRFFITOPTTEST:
    CLASSIFIER: SnirfClassifier
    MODE: predict
    MASK_SIM: TEST
    OPTS:
      MODEL: SNIRFFITOPTTRAIN
      FITOPT: SALT20_cal

  SCONE_TRAIN: # Helen's CNN classifier
    CLASSIFIER: SconeClassifier
    MODE: train
    OPTS:
      # HEATMAP CREATION OPTS
      CATEGORICAL: True # OPTIONAL, binary or categorical classification, default: False
      NUM_WAVELENGTH_BINS: 32 # OPTIONAL, heatmap height, default: 32
      NUM_MJD_BINS: 180 # OPTIONAL, heatmap width, default: 180
      REMAKE_HEATMAPS: False # OPTIONAL, SCONE does not remake heatmaps unless the 3_CLAS/heatmaps subdir doesn't exist or if this param is true, default: False
      # MODEL OPTS
      NUM_EPOCHS: 400 # REQUIRED, number of training epochs
      IA_FRACTION: 0.5 # OPTIONAL, desired Ia fraction in train/validation/test sets for binary classification, default: 0.5
  
  SCONE_PREDICT: # Helen's CNN classifier
    CLASSIFIER: SconeClassifier
    MODE: predict
    OPTS:
      # HEATMAP CREATION OPTS
      CATEGORICAL: True # OPTIONAL, binary or categorical classification, default: False
      NUM_WAVELENGTH_BINS: 32 # OPTIONAL, heatmap height, default: 32
      NUM_MJD_BINS: 180 # OPTIONAL, heatmap width, default: 180
      REMAKE_HEATMAPS: False # OPTIONAL, SCONE does not remake heatmaps unless the 3_CLAS/heatmaps subdir doesn't exist or if this param is true, default: False
      # MODEL OPTS
      TRAINED_MODEL: "/path/to/trained/model" # REQUIRED, path to trained model that should be used for prediction
      IA_FRACTION: 0.5 # OPTIONAL, desired Ia fraction in train/validation/test sets for binary classification, default: 0.5

  UNITY:
    CLASSIFIER: UnityClassifier  # The unity classifier is used for spec samples - just returns 1.0 for everything.
    MODE: predict
